#!/bin/bash
export LANG=C
GREEN="\x1b[32m"
RED="\x1b[31m"
TXTRST="\x1b[0m"

show_help() {
	echo "Usage: ${0##*/} [community|supported] (--credentials [username]:[password])"
        echo "Sets the used repository for grommunio products"
	echo ""
        echo "Use \`${0##*/} community\`  to set community repositories."
	echo "Use \`${0##*/} supported\`  to set supported repositories (subscription required)."
}

REPO_TYPE="${1}"
if [[ "${REPO_TYPE}" != "community" && "${REPO_TYPE}" != "supported" ]]; then
    echo "Invalid repository type: ${REPO_TYPE}"
    show_help
    exit 1
fi

CREDENTIALS=""
ARGS=("$@")
for ((i = 0; i < $#; i++)); do
    if [[ "${ARGS[i]}" == "--credentials" && "$((i+1))" -lt $# && "${ARGS[i+1]}" =~ ^[^:]+:[^:]+$ ]]; then
        CREDENTIALS="${ARGS[i+1]}"
        break
    fi
done

# if credentials are not given by commandline, try to get them from credentials file
if [[ -z "${CREDENTIALS}" ]]; then
	[ -f '/etc/grommunio-admin-common/license/credentials.txt' ] && CREDENTIALS=$(cat /etc/grommunio-admin-common/license/credentials.txt)
fi

# if credentials are still not detected, try to get them from repo file
if [[ -z "${CREDENTIALS}" ]]; then
	[ -f '/etc/zypp/repos.d/grommunio.repo' ] && \
		CREDENTIALS=$(grep "^baseurl=https://.*:.*@.*$" /etc/zypp/repos.d/grommunio.repo \
		| sed 's#^baseurl=https://\([^:][^:]*\):\([^@][^@]*\)@.*#\1:\2#')
fi

if [[ -n "${CREDENTIALS}" ]]; then
	echo -en "Credentials = ${GREEN}$(echo "${CREDENTIALS}" | awk -F ':' '{ print $1 }')"
fi
echo -en "${TXTRST}:"
echo -en "${RED}$(echo "${CREDENTIALS}" | awk -F ':' '{ print $2 }'|sed 's#^\(....\).*$#\1...#')"
echo -e "${TXTRST}."
if [[ -n "${CREDENTIALS}" ]]; then
	echo "${CREDENTIALS}" > /etc/grommunio-admin-common/license/credentials.txt
	chown grommunio:grommunio /etc/grommunio-admin-common/license/credentials.txt
fi

if [ -f /etc/os-release ]; then
	. /etc/os-release
else
	echo "The file /etc/os-release was not found. The distribution cannot be identified."
	exit 1
fi

add_grommunio_repo() {
	case $PKG_MANAGER in
		zypper)
			zypper rr grommunio > /dev/null 2>&1
			# because zypper ar is making bullshit with passwords,
			# create repo file directly
			#zypper ar -f -k "${REPO_URL}" grommunio > /dev/null 2>&1
			echo -e "[grommunio]\nenabled=1\nautorefresh=1\nbaseurl=${REPO_URL}\ntype=rpm-md\n" > /etc/zypp/repos.d/grommunio.repo
			sed -i "s#15.[0-9]#${VERSION_ID}#g" /etc/zypp/repos.d/*.repo > /dev/null 2>&1
			rpm --import https://download.grommunio.com/RPM-GPG-KEY-grommunio > /dev/null 2>&1
			;;
		yum)
			if [ -f "/etc/grommunio-admin-common/license/credentials.txt" ]; then
				echo -e "[grommunio]\nname=grommunio\nbaseurl=${REPO_URL}\nenabled=1\ngpgcheck=0\nusername=$(awk -F: '{ print $1 }' /etc/grommunio-admin-common/license/credentials.txt)\npassword=$(awk -F: '{ print $2 }' /etc/grommunio-admin-common/license/credentials.txt)" > /etc/yum.repos.d/grommunio.repo
			else
				echo -e "[grommunio]\nname=grommunio\nbaseurl=${REPO_URL}\nenabled=1\ngpgcheck=0\n" > /etc/yum.repos.d/grommunio.repo
			fi
			rpm --import https://download.grommunio.com/RPM-GPG-KEY-grommunio > /dev/null 2>&1
			;;
		apt)
			mkdir -p /etc/apt/keyrings
			tmp=$(mktemp)
			trap 'rm -f $tmp' EXIT INT HUP
			/usr/lib/apt/apt-helper download-file https://download.grommunio.com/RPM-GPG-KEY-grommunio "$tmp"
			if command -v gpg >/dev/null; then
				EXT=gpg; KEYRING=$KEYRING.$EXT
				gpg --dearmor "$tmp"
			else
				EXT=asc; KEYRING=$KEYRING.$EXT
				mv "$tmp"{,"$EXT"}
			fi
			if ! test -f "$KEYRING" || ! diff "$tmp"."$EXT" "$KEYRING" >/dev/null ; then
					mv -vf "$tmp"."$EXT" "$KEYRING";
			fi
			printf "Types: deb\nEnabled: yes\nURIs: %s\nSuites: %s\nComponents: main\nSigned-By: %s\n" \
				"${REPO_URL}" "${ID^}_${VERSION_ID}" "$KEYRING" > "$SOURCES"
			if [[ ${VALID_REPO_TYPE} == "supported" ]]; then
				# Use oneline style as this is easier to verify
				APTAUTH="machine download.grommunio.com login ${CREDENTIALS%:*} password ${CREDENTIALS#*:}"
				# Only overwrite config if "oneline" isn't present
				if ! grep -qxF -- "$APTAUTH" /etc/apt/auth.conf.d/*.conf; then
					# This will rename any old multiline configs
					todelete=$(grep -l 'machine download.grommunio.com' /etc/apt/auth.conf.d/*.conf)
					[ -n "$todelete" ] &&  mv -fv "$todelete"{,.bak}
					echo "$APTAUTH" > "$AUTHCONF"
				fi
			fi
			chmod -v o-rwx /etc/apt/auth.conf.d/grommunio.conf
			DUPLICATES=$(apt-get update -qq |& \grep -Po '(?<=[in|and] )\S+.(?=:)'|sort -u|grep -v "$SOURCES")
			if [ -n "$DUPLCATES" ]; then
				# shellcheck disable=SC2086
				sed -i '/Enabled/d;/Suites/iEnabled: no' $DUPLICATES
			fi
			if ! apt-get update; then
				echo -e "${RED} ⚠ [ERROR] See the log above.${TXTRST}"
				exit 1
			fi
			;;
	esac
}

REPO_PREFIX="https://download.grommunio.com"
if [[ -e /etc/grommunio-admin-common/license/credentials.txt ]] && [[ "${REPO_TYPE}" == "supported" ]]; then
	CREDS=$(cat /etc/grommunio-admin-common/license/credentials.txt)
	if ! curl -s --fail --basic --user "${CREDS}" "${REPO_PREFIX}/supported" > /dev/null 2>&1; then
		VALID_REPO_TYPE="community"
		echo -e "${RED}▶ Supported credentials not valid. Please validate your subscription credentials.${TXTRST}"
		exit 5
	else
		VALID_REPO_TYPE="supported"
		REPO_PREFIX="https://${CREDS}@download.grommunio.com"
	fi
else
	if [[ "${REPO_TYPE}" == "supported" ]]; then
		echo -e "${RED}▶ Supported credentials not found. Please ensure that you have a valid subscription configured.${TXTRST}"
		exit 6
	else
		VALID_REPO_TYPE="community"
	fi
fi

case $ID in
	debian|ubuntu)
		export PKG_MANAGER="apt"
		ARCH=$(dpkg --print-architecture)
		AUTHCONF=/etc/apt/auth.conf.d/grommunio.conf
		KEYRING=/etc/apt/keyrings/download.grommunio.com
		SOURCES=/etc/apt/sources.list.d/grommunio.sources
		REPO_URL="${REPO_PREFIX}/${VALID_REPO_TYPE}/${ID^}_${VERSION_ID}/"
		INDEX="$(apt-get indextargets "Origin: grommunio" "Version: ${VALID_REPO_TYPE}")"
		# only add/replace repository if not present or problemss occur
		# repository not known 
		if [[ -z "$INDEX" ]]; then
			add_grommunio_repo
		# mend keyring, credential and duplicate sources.
		elif ! apt-get update  -qq; then
			add_grommunio_repo
		fi
		;;
	centos|rhel|rocky|almalinux)
		export PKG_MANAGER="yum"
		REPO_URL="${REPO_PREFIX}/${VALID_REPO_TYPE}/EL${VERSION_ID%%.*}/"
		if ! grep -q -R --include '*.repo' "^baseurl=${REPO_URL}" /etc/yum.repos.d/ 2>/dev/null; then
			add_grommunio_repo
		fi
		;;
	opensuse*|sles|grommunio*)
		PKG_MANAGER="zypper"
		REPO_URL="${REPO_PREFIX}/${VALID_REPO_TYPE}/openSUSE_Leap_${VERSION_ID}/?ssl_verify=no"
		if ! grep -q -R --include '*.repo' "^baseurl=${REPO_URL}" /etc/zypp/repos.d/ 2>/dev/null; then
			add_grommunio_repo ${PKG_MANAGER}
		fi
		;;
	*)
		echo "Distribution '${ID}' is not supported. Please check available distributions at https://download.grommunio.com"
		exit 1
		;;
esac
echo  "Repository URL = $REPO_URL"
